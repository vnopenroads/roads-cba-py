name: Build and upload Linux Python Package

on:  [pull_request, release]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.6', '3.7', '3.8' , '3.9' ]
        architecture: [ 'x64' ]
    steps:
    - uses: actions/checkout@v2
    - name: Set Python environment
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Install packages
      run: |
        python -m pip install setuptools --upgrade
        python -m pip install pytest wheel
        python -m pip install -r requirements.txt
        python -m pip install --upgrade cffi twine

    - name: Build
      run: python setup.py sdist bdist_wheel

    - name: Moves wheels
      run: |
        mkdir -p dist
        cp -v ./*-manylinux*.whl dist/

    - name: Keep wheels on GitHub
#      if: ${{ github.event_name == 'push'}}
      uses: actions/upload-artifact@v2
      with:
        name: library
        path: dist/*.whl
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

    - name: Publish wheels to PyPI
      if: ${{ github.event_name == 'release'}}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*-manylinux*.whl
#
#    - name: Save wheels to AWS
#      uses: jakejarvis/s3-sync-action@master
#      with:
#        args: --acl public-read --follow-symlinks
#      env:
#        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1
#        SOURCE_DIR: 'dist/'      # optional: defaults to entire repository
#        DEST_DIR: 'wheels/'      # optional: defaults to entire repository